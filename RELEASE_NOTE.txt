2019-06-25: Version 0.9.0 released
  - Initial beta release with foundational functionality.

2020-07-03: Version 0.9.1 released
  - Code update to use `@staticmethod` for relevant methods.

2024-11-23: Version 1.0.0 released
  - Initial release.

2024-12-16: Version 1.1.0a released
  - Alpha release introducing major refactoring for improved code readability and performance.

2024-12-19: Version 1.1.0b released
  - Beta release addressing critical issues from alpha and ensuring stability for the final 1.1.0 release.

2025-01-03: Version 1.1.0 released

[Release Overview]
This release (Version 1.1.0) integrates all prior fixes, optimizations, and testing to deliver a stable and production-ready Geohash library version, officially concluding the alpha and beta phases.
**Key Updates:**
- Addressed bugs and issues reported in the Alpha release.
- Fixed scalar edge-case handling in `_normalize_angle_180`.
- Improved unit tests for edge cases and rare scenarios.
- Optimized geohash operations for better calculation precision and performance.
- Significant performance improvement achieved through profiling and algorithm optimizations.

[Purpose & Next Steps]
Version 1.1.0 is the first stable release of this series, marking the end of prior alpha and beta development stages. Feedback from users will inform small updates in future minor releases.

**Notable Additions:**
- Refactored code for enhanced readability and performance.
- New test and profiling scripts added:
  - `edge_test.py`: Designed to test edge cases of geohash functionality.
  - `geohash_precision_test.py`: Evaluates the precision accuracy of geohash calculations.
  - `geohash_profiling.py`: Provides profiling for geohash algorithm efficiency.
  - `geohash_test.py`: General tests to validate geohash-related features.

[Important Note]
Version 1.1.0 delivers a complete and stable release, incorporating feedback and fixes from earlier stages to ensure readiness for production use.

[Test Scripts Details]
The following new test and profiling scripts are introduced in this release:
- **edge_test.py**: Focused on edge cases and corner scenarios for geohash operations, ensuring stability in extreme conditions.
- **geohash_precision_test.py**: Provides a framework for testing the precision of geohash encoding and decoding operations.
- **geohash_profiling.py**: Enables developers to analyze and profile the performance of geohash algorithms under various workloads.
- **geohash_test.py**: General-purpose tests to verify core geohash functionalities.

The scripts are under review and subject to refinement. Future updates will include final documentation and potential reorganizations based on feedback.

---

# Release Notes for Version 1.2.0

This release begins the 1.2.x series of the Geohash library with a focus on improving usability, maintaining simplicity, and enhancing the codebase.

## Key Updates and Changes
1. **Technical Decision: No Numpy Support**
   - The introduction of Numpy was explored as a means of improving performance but was ultimately deemed unsuitable for the project due to:
     1. The sequential nature of the Geohash algorithm, where each step depends on the previous step's result, making vectorized operations inappropriate.
     2. The cost-to-benefit ratio of introducing Numpy was not justified, as current implementations provide adequate performance and maintain higher code simplicity.
   This decision reflects our commitment to a clear and maintainable codebase.

2. **Deprecation and Removal of Legacy Methods**
   - The now-deprecated `get_geohash` and `set_geohash` methods have been removed in this version to encourage the use of more Pythonic getter and setter implementations.

3. **Improved Testing and Examples**
   - Added new examples under the `examples/` directory to help users understand common use cases.
   - Expanded CI-integrated testing to ensure reliability and stability on each code commit.

---

# Future Roadmap

**Version 1.2.x**
- Continue refining and extending test coverage, especially for edge cases.
- Expand examples to include more practical real-world applications.
- Finalize documentation updates, providing clearer guidelines for users and contributors.

**Version 2.0 (Indefinite)**
- The initial idea was to introduce Numpy dependency and advanced operations; however, due to the nature of the Geohash algorithm, this direction is currently suspended. As a result, the 2.0 release and plans for supporting Numpy have been shelved indefinitely.
- Focus will remain on ensuring the core library remains performant and extensible using pure Python.